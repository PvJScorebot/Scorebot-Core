# Generated by Django 2.2.1 on 2019-05-14 01:08

from django.db import migrations, models
import django.db.models.deletion
import scorebot_db.models.teams
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('ID', models.AutoField(db_column='id', editable=False, primary_key=True, serialize=False, verbose_name='Credit ID')),
                ('Date', models.DateTimeField(auto_now_add=True, db_column='date', verbose_name='Credit Date')),
                ('Type', models.PositiveSmallIntegerField(choices=[(0, 'Correction'), (1, 'Transfer'), (2, 'Purchase'), (3, 'Payment'), (4, 'Health'), (5, 'Beacon'), (6, 'Flag'), (7, 'Ticket'), (8, 'Achivement'), (9, 'Event')], db_column='type', default=0, verbose_name='Credit Type')),
                ('Value', models.IntegerField(blank=True, db_column='value', default=0, verbose_name='Credit Value')),
            ],
            options={
                'verbose_name': 'Credit',
                'verbose_name_plural': 'Credit',
                'db_table': 'credits',
                'ordering': ['Date'],
                'get_latest_by': 'Date',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('ID', models.AutoField(db_column='id', editable=False, primary_key=True, serialize=False, verbose_name='Game ID')),
                ('Name', models.CharField(db_column='name', max_length=255, verbose_name='Game Name')),
                ('Start', models.DateTimeField(blank=True, db_column='start', null=True, verbose_name='Game Start Time')),
                ('End', models.DateTimeField(blank=True, db_column='end', null=True, verbose_name='Game End Time')),
                ('Mode', models.PositiveSmallIntegerField(choices=[(0, 'Red vs Blue'), (1, 'Blue vs Blue'), (2, 'King'), (4, 'High Ground'), (5, 'Score Attack')], db_column='mode', default=0, verbose_name='Game Mode')),
                ('Status', models.PositiveSmallIntegerField(choices=[(0, 'Not Started'), (1, 'Running'), (2, 'Paused'), (3, 'Completed'), (4, 'Stopped'), (5, 'Archivd')], db_column='status', default=0, verbose_name='Game Status')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'db_table': 'games',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('ID', models.AutoField(db_column='id', editable=False, primary_key=True, serialize=False, verbose_name='Option ID')),
                ('Name', models.CharField(db_column='name', max_length=255, verbose_name='Option Name')),
            ],
            options={
                'verbose_name': 'Game Option',
                'verbose_name_plural': 'Game Options',
                'db_table': 'options',
            },
        ),
        migrations.CreateModel(
            name='OptionKey',
            fields=[
                ('ID', models.AutoField(db_column='id', editable=False, primary_key=True, serialize=False, verbose_name='Option Key ID')),
                ('Name', models.CharField(db_column='name', max_length=255, verbose_name='Option Key Name')),
                ('Option', models.ForeignKey(db_column='option', on_delete=django.db.models.deletion.CASCADE, related_name='Keys', to='scorebot_db.Option', verbose_name='Option Key Parent')),
            ],
            options={
                'verbose_name': 'Option Key',
                'verbose_name_plural': 'Option Keys',
                'db_table': 'option_keys',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('ID', models.AutoField(db_column='id', editable=False, primary_key=True, serialize=False, verbose_name='Score ID')),
                ('Value', models.BigIntegerField(db_column='value', default=0, editable=0, verbose_name='Score Value')),
            ],
            options={
                'verbose_name': 'Score',
                'verbose_name_plural': 'Scores',
                'db_table': 'score',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('UUID', models.UUIDField(db_column='uuid', default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Token UUID')),
                ('Name', models.CharField(blank=True, db_column='name', max_length=255, null=True, verbose_name='Token Name')),
                ('Expires', models.DateTimeField(blank=True, db_column='expires', null=True, verbose_name='Token Expire Time')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'db_table': 'tokens',
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.PositiveSmallIntegerField(choices=[(0, 'Pending'), (1, 'Approved'), (2, 'Rejected')], db_column='status', default=0, verbose_name='Transfer Status')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_transfer', to='scorebot_db.Credit', verbose_name='Credit Base')),
            ],
            options={
                'verbose_name': 'Correction Credit',
                'verbose_name_plural': 'Correction Credits',
                'db_table': 'credits_transfer',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_ticket', to='scorebot_db.Credit', verbose_name='Credit Base')),
            ],
            options={
                'verbose_name': 'Ticket Credit',
                'verbose_name_plural': 'Ticket Credits',
                'db_table': 'credits_ticket',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('ID', models.AutoField(db_column='id', editable=False, primary_key=True, serialize=False, verbose_name='Team ID')),
                ('Name', models.CharField(db_column='name', max_length=255, verbose_name='Team Name')),
                ('Game', models.ForeignKey(db_column='Team Game', on_delete=django.db.models.deletion.CASCADE, related_name='Teams', to='scorebot_db.Game', verbose_name='Team Game')),
                ('Token', models.OneToOneField(blank=True, db_column='token', null=True, on_delete=django.db.models.deletion.SET_NULL, to='scorebot_db.Token', verbose_name='Team Token')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'db_table': 'teams',
            },
        ),
        migrations.CreateModel(
            name='ScoringTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Score', models.OneToOneField(blank=True, db_column='score', null=True, on_delete=django.db.models.deletion.CASCADE, to='scorebot_db.Score', verbose_name='Team Score')),
                ('Team', models.OneToOneField(db_column='team', on_delete=django.db.models.deletion.CASCADE, related_name='Scoring', to='scorebot_db.Team', verbose_name='Team')),
            ],
            options={
                'verbose_name': 'Scoring Team',
                'verbose_name_plural': 'Scoring Teams',
                'db_table': 'teams_scoring',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Description', models.CharField(db_column='description', max_length=255, null=True, verbose_name='Purchase Description')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_purchase', to='scorebot_db.Credit', verbose_name='Credit Base')),
                ('Item', models.ForeignKey(blank=True, db_column='item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Purchases', to='scorebot_db.Purchase', verbose_name='Purchased Item')),
            ],
            options={
                'verbose_name': 'Purchase Credit',
                'verbose_name_plural': 'Purchase Credits',
                'db_table': 'credits_purchase',
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('ID', models.AutoField(db_column='id', editable=False, primary_key=True, serialize=False, verbose_name='Port ID')),
                ('Type', models.PositiveSmallIntegerField(choices=[(0, 'TCP'), (1, 'UDP'), (2, 'ICMP')], db_column='type', default=0, verbose_name='Port Type')),
                ('Number', models.PositiveIntegerField(db_column='number', verbose_name='Port Number')),
                ('Game', models.ForeignKey(db_column='game', on_delete=django.db.models.deletion.CASCADE, related_name='Ports', to='scorebot_db.Game', verbose_name='Port Game')),
            ],
            options={
                'verbose_name': 'Port',
                'verbose_name_plural': 'Ports',
                'db_table': 'ports',
                'ordering': ['Game', 'Number'],
            },
        ),
        migrations.CreateModel(
            name='PlayerTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Color', models.CharField(db_column='color', default=scorebot_db.models.teams._new_color, max_length=9, verbose_name='Team Color')),
                ('Store', models.IntegerField(blank=True, db_column='store', null=True, verbose_name='Team Store ID')),
                ('Offense', models.BooleanField(db_column='offense', default=False, verbose_name='Team Can Attack')),
                ('Logo', models.ImageField(blank=True, db_column='logo', null=True, upload_to='', verbose_name='Team Logo')),
                ('Team', models.OneToOneField(db_column='team', on_delete=django.db.models.deletion.CASCADE, related_name='Player', to='scorebot_db.ScoringTeam', verbose_name='Team')),
            ],
            options={
                'verbose_name': 'Pleyer Team',
                'verbose_name_plural': 'Player Teams',
                'db_table': 'teams_player',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_payment', to='scorebot_db.Credit', verbose_name='Credit Base')),
                ('Team', models.ForeignKey(db_column='team', on_delete=django.db.models.deletion.CASCADE, to='scorebot_db.Team', verbose_name='Target Team')),
            ],
            options={
                'verbose_name': 'Payment Credit',
                'verbose_name_plural': 'Payment Credits',
                'db_table': 'credits_payment',
            },
        ),
        migrations.CreateModel(
            name='OptionValue',
            fields=[
                ('ID', models.AutoField(db_column='id', editable=False, primary_key=True, serialize=False, verbose_name='Option Value ID')),
                ('Value', models.CharField(blank=True, db_column='value', max_length=255, null=True, verbose_name='Option Value Data')),
                ('Number', models.BooleanField(db_column='number', default=False, verbose_name='Option Value is Number')),
                ('Key', models.OneToOneField(db_column='key', on_delete=django.db.models.deletion.CASCADE, related_name='Value', to='scorebot_db.OptionKey', verbose_name='Option Value Key')),
            ],
            options={
                'verbose_name': 'Option Value',
                'verbose_name_plural': 'Option Values',
                'db_table': 'option_values',
            },
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Expected', models.IntegerField(db_column='expected', default=0, verbose_name='Expected Credits')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_health', to='scorebot_db.Credit', verbose_name='Credit Base')),
            ],
            options={
                'verbose_name': 'Health Credit',
                'verbose_name_plural': 'Health Credit',
                'db_table': 'credits_health',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='Options',
            field=models.ForeignKey(blank=True, db_column='options', null=True, on_delete=django.db.models.deletion.SET_NULL, to='scorebot_db.Option', verbose_name='Game Options'),
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_flag', to='scorebot_db.Credit', verbose_name='Credit Base')),
            ],
            options={
                'verbose_name': 'Flag Credit',
                'verbose_name_plural': 'Flag Credits',
                'db_table': 'credits_flag',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Details', models.CharField(blank=True, db_column='details', max_length=255, null=True, verbose_name='Event Details')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_event', to='scorebot_db.Credit', verbose_name='Credit Base')),
            ],
            options={
                'verbose_name': 'Event Credit',
                'verbose_name_plural': 'Event Credits',
                'db_table': 'credits_event',
            },
        ),
        migrations.AddField(
            model_name='credit',
            name='Receiver',
            field=models.ForeignKey(db_column='receiver', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ReceivedCredits', to='scorebot_db.Team', verbose_name='Credit Receiver'),
        ),
        migrations.AddField(
            model_name='credit',
            name='Score',
            field=models.ForeignKey(db_column='score', on_delete=django.db.models.deletion.CASCADE, related_name='Stack', to='scorebot_db.Score', verbose_name='Credit Parent'),
        ),
        migrations.AddField(
            model_name='credit',
            name='Sender',
            field=models.ForeignKey(db_column='sender', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SentCredits', to='scorebot_db.Team', verbose_name='Credit Sender'),
        ),
        migrations.CreateModel(
            name='Correction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Notes', models.CharField(blank=True, db_column='notes', max_length=1024, null=True, verbose_name='Correction Notes')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_correction', to='scorebot_db.Credit', verbose_name='Credit Base')),
            ],
            options={
                'verbose_name': 'Correction Credit',
                'verbose_name_plural': 'Correction Credits',
                'db_table': 'credits_correction',
            },
        ),
        migrations.CreateModel(
            name='Beacon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_beacon', to='scorebot_db.Credit', verbose_name='Credit Base')),
            ],
            options={
                'verbose_name': 'Beacon Credit',
                'verbose_name_plural': 'Beacon Credits',
                'db_table': 'credits_beacon',
            },
        ),
        migrations.CreateModel(
            name='Achivement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Details', models.CharField(blank=True, db_column='details', max_length=255, null=True, verbose_name='Achivement Details')),
                ('Credit', models.OneToOneField(db_column='credit', on_delete=django.db.models.deletion.CASCADE, related_name='Subclass_achivement', to='scorebot_db.Credit', verbose_name='Credit Base')),
            ],
            options={
                'verbose_name': 'Achivement Credit',
                'verbose_name_plural': 'Achivement Credits',
                'db_table': 'credits_goal',
            },
        ),
    ]
