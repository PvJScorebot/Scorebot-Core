# Generated by Django 2.1.2 on 2018-10-26 03:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField(blank=True, null=True, verbose_name='Content Data')),
                ('status', models.SmallIntegerField(default=0, editable=False, verbose_name='Content Passed Percentage')),
                ('type', models.CharField(default='text', max_length=64, verbose_name='Content Type')),
            ],
            options={
                'verbose_name': 'Service Content',
                'verbose_name_plural': 'Service Content',
            },
        ),
        migrations.CreateModel(
            name='DNS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.GenericIPAddressField(unpack_ipv4=True, verbose_name='DNS Server')),
            ],
            options={
                'verbose_name': 'DNS Server',
                'verbose_name_plural': 'DNS Servers',
            },
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=150, verbose_name='Flag Name')),
                ('flag', models.CharField(max_length=120, verbose_name='Flag Data Value')),
                ('enabled', models.BooleanField(default=True, verbose_name='Flag Enabled')),
                ('description', models.TextField(max_length=500, verbose_name='Flag Description')),
                ('value', models.PositiveSmallIntegerField(default=100, verbose_name='Flag Value')),
            ],
            options={
                'verbose_name': 'Flag',
                'verbose_name_plural': 'Flags',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fqdn', models.CharField(max_length=150, verbose_name='Host Full Domain Name')),
                ('online', models.BooleanField(default=False, editable=False, verbose_name='Host Online')),
                ('name', models.SlugField(blank=True, max_length=150, null=True, verbose_name='Host Display Name')),
                ('ping_min', models.PositiveSmallIntegerField(default=0, verbose_name='Host Minimum Pingback Percentage')),
                ('scored', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Host has been Scored')),
                ('ip', models.GenericIPAddressField(null=True, unpack_ipv4=True, verbose_name='Host Address')),
                ('ping_last', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='Host Last Pingback Percentage')),
            ],
            options={
                'verbose_name': 'Host',
                'verbose_name_plural': 'Hosts',
            },
        ),
        migrations.CreateModel(
            name='Hypervisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=150, verbose_name='Hypervisor Name')),
                ('address', models.GenericIPAddressField(unpack_ipv4=True, verbose_name='DNS Server')),
            ],
            options={
                'verbose_name': 'VM Hypervisor',
                'verbose_name_plural': 'VM Hypervisors',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port', models.PositiveIntegerField(verbose_name='Service Port')),
                ('name', models.SlugField(max_length=64, verbose_name='Service Name')),
                ('bonus', models.BooleanField(default=False, verbose_name='Service is Bonus')),
                ('value', models.PositiveSmallIntegerField(default=50, verbose_name='Service Value')),
                ('bonus_started', models.BooleanField(default=False, editable=False, verbose_name='Service Bonus Enabled')),
                ('application', models.SlugField(default='http', max_length=64, verbose_name='Service Application Type')),
                ('protocol', models.PositiveSmallIntegerField(choices=[(0, 'tcp'), (1, 'udp'), (2, 'icmp')], default=0, verbose_name='Service Protocol')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'pass'), (1, 'reset'), (2, 'timeout'), (3, 'refused'), (4, 'invalid')], default=2, editable=False, verbose_name='Service Status')),
                ('content', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service', to='scorebot_grid.Content')),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='scorebot_grid.Host')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.AddField(
            model_name='host',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='guests', to='scorebot_grid.Hypervisor'),
        ),
        migrations.AddField(
            model_name='flag',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='scorebot_grid.Host'),
        ),
    ]
